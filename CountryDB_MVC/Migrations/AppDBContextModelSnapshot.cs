// <auto-generated />
using System;
using CountryDB_MVC.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CountryDB_MVC.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CountryDB_MVC.Models.Entities.Continent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContinentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Continents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContinentName = "Europe"
                        },
                        new
                        {
                            Id = 2,
                            ContinentName = "Asia"
                        },
                        new
                        {
                            Id = 3,
                            ContinentName = "Africa"
                        },
                        new
                        {
                            Id = 4,
                            ContinentName = "America"
                        },
                        new
                        {
                            Id = 5,
                            ContinentName = "Oceania"
                        });
                });

            modelBuilder.Entity("CountryDB_MVC.Models.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContinentID")
                        .HasColumnType("int");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContinentID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContinentID = 4,
                            CountryName = "Argentina"
                        },
                        new
                        {
                            Id = 2,
                            ContinentID = 2,
                            CountryName = "China"
                        },
                        new
                        {
                            Id = 3,
                            ContinentID = 3,
                            CountryName = "South Africa"
                        },
                        new
                        {
                            Id = 4,
                            ContinentID = 5,
                            CountryName = "New Zealand"
                        },
                        new
                        {
                            Id = 5,
                            ContinentID = 1,
                            CountryName = "Spain"
                        });
                });

            modelBuilder.Entity("CountryDB_MVC.Models.Entities.Country_Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryID");

                    b.HasIndex("LanguageID");

                    b.ToTable("Country_Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryID = 5,
                            LanguageID = 4
                        },
                        new
                        {
                            Id = 2,
                            CountryID = 2,
                            LanguageID = 2
                        },
                        new
                        {
                            Id = 3,
                            CountryID = 4,
                            LanguageID = 1
                        },
                        new
                        {
                            Id = 4,
                            CountryID = 3,
                            LanguageID = 5
                        });
                });

            modelBuilder.Entity("CountryDB_MVC.Models.Entities.CountryDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GDP")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryID");

                    b.ToTable("CountryDetail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryID = 5,
                            GDP = 0m,
                            Population = 46580000,
                            Year = 2010
                        },
                        new
                        {
                            Id = 2,
                            CountryID = 5,
                            GDP = 0m,
                            Population = 40570000,
                            Year = 2000
                        },
                        new
                        {
                            Id = 3,
                            CountryID = 4,
                            GDP = 0m,
                            Population = 4350000,
                            Year = 2010
                        },
                        new
                        {
                            Id = 4,
                            CountryID = 4,
                            GDP = 0m,
                            Population = 3858000,
                            Year = 2000
                        },
                        new
                        {
                            Id = 5,
                            CountryID = 4,
                            GDP = 0m,
                            Population = 3330000,
                            Year = 1990
                        },
                        new
                        {
                            Id = 6,
                            CountryID = 1,
                            GDP = 0m,
                            Population = 40790000,
                            Year = 2010
                        });
                });

            modelBuilder.Entity("CountryDB_MVC.Models.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageName = "English"
                        },
                        new
                        {
                            Id = 2,
                            LanguageName = "Chinese"
                        },
                        new
                        {
                            Id = 3,
                            LanguageName = "Turkish"
                        },
                        new
                        {
                            Id = 4,
                            LanguageName = "Spanish"
                        },
                        new
                        {
                            Id = 5,
                            LanguageName = "Afrikaans"
                        });
                });

            modelBuilder.Entity("CountryDB_MVC.Models.Entities.Country", b =>
                {
                    b.HasOne("CountryDB_MVC.Models.Entities.Continent", "Continent")
                        .WithMany("Countries")
                        .HasForeignKey("ContinentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Continent");
                });

            modelBuilder.Entity("CountryDB_MVC.Models.Entities.Country_Language", b =>
                {
                    b.HasOne("CountryDB_MVC.Models.Entities.Country", "Country")
                        .WithMany("Country_Languages")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CountryDB_MVC.Models.Entities.Language", "Language")
                        .WithMany("Country_Languages")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("CountryDB_MVC.Models.Entities.CountryDetail", b =>
                {
                    b.HasOne("CountryDB_MVC.Models.Entities.Country", "Country")
                        .WithMany("CountryDetails")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CountryDB_MVC.Models.Entities.Continent", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("CountryDB_MVC.Models.Entities.Country", b =>
                {
                    b.Navigation("CountryDetails");

                    b.Navigation("Country_Languages");
                });

            modelBuilder.Entity("CountryDB_MVC.Models.Entities.Language", b =>
                {
                    b.Navigation("Country_Languages");
                });
#pragma warning restore 612, 618
        }
    }
}
